<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.epf.dao.impl.ZombieDaoImplTest" time="0.283" tests="6" errors="6" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="23"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/antonindudragne/Documents/4A EPF/Java/Projet/target/test-classes:/Users/antonindudragne/Documents/4A EPF/Java/Projet/target/classes:/Users/antonindudragne/.m2/repository/org/springframework/spring-webmvc/6.2.2/spring-webmvc-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-aop/6.2.2/spring-aop-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-beans/6.2.2/spring-beans-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-context/6.2.2/spring-context-6.2.2.jar:/Users/antonindudragne/.m2/repository/io/micrometer/micrometer-observation/1.14.3/micrometer-observation-1.14.3.jar:/Users/antonindudragne/.m2/repository/io/micrometer/micrometer-commons/1.14.3/micrometer-commons-1.14.3.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-core/6.2.2/spring-core-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-jcl/6.2.2/spring-jcl-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-expression/6.2.2/spring-expression-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-web/6.2.2/spring-web-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-jdbc/6.1.13/spring-jdbc-6.1.13.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-tx/6.1.13/spring-tx-6.1.13.jar:/Users/antonindudragne/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/antonindudragne/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/antonindudragne/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.2/jackson-databind-2.18.2.jar:/Users/antonindudragne/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.2/jackson-annotations-2.18.2.jar:/Users/antonindudragne/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.2/jackson-core-2.18.2.jar:/Users/antonindudragne/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar:/Users/antonindudragne/.m2/repository/ch/qos/logback/logback-classic/1.5.16/logback-classic-1.5.16.jar:/Users/antonindudragne/.m2/repository/ch/qos/logback/logback-core/1.5.16/logback-core-1.5.16.jar:/Users/antonindudragne/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/antonindudragne/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/Users/antonindudragne/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/Users/antonindudragne/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/antonindudragne/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/Users/antonindudragne/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/antonindudragne/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/Users/antonindudragne/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/Users/antonindudragne/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/Users/antonindudragne/.m2/repository/org/mockito/mockito-core/5.10.0/mockito-core-5.10.0.jar:/Users/antonindudragne/.m2/repository/net/bytebuddy/byte-buddy/1.14.11/byte-buddy-1.14.11.jar:/Users/antonindudragne/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.11/byte-buddy-agent-1.14.11.jar:/Users/antonindudragne/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-test/6.2.2/spring-test-6.2.2.jar:/Users/antonindudragne/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/Users/antonindudragne/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/antonindudragne/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/antonindudragne/.m2/repository/com/jayway/jsonpath/json-path/2.7.0/json-path-2.7.0.jar:/Users/antonindudragne/.m2/repository/net/minidev/json-smart/2.4.7/json-smart-2.4.7.jar:/Users/antonindudragne/.m2/repository/net/minidev/accessors-smart/2.4.7/accessors-smart-2.4.7.jar:/Users/antonindudragne/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="Europe/Paris"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="23"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="FR"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/antonindudragne/Documents/4A EPF/Java/Projet/target/surefire/surefirebooter-20250310142341669_3.jar /Users/antonindudragne/Documents/4A EPF/Java/Projet/target/surefire 2025-03-10T14-23-41_613-jvmRun1 surefire-20250310142341669_1tmp surefire_0-20250310142341669_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/antonindudragne/Documents/4A EPF/Java/Projet/target/test-classes:/Users/antonindudragne/Documents/4A EPF/Java/Projet/target/classes:/Users/antonindudragne/.m2/repository/org/springframework/spring-webmvc/6.2.2/spring-webmvc-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-aop/6.2.2/spring-aop-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-beans/6.2.2/spring-beans-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-context/6.2.2/spring-context-6.2.2.jar:/Users/antonindudragne/.m2/repository/io/micrometer/micrometer-observation/1.14.3/micrometer-observation-1.14.3.jar:/Users/antonindudragne/.m2/repository/io/micrometer/micrometer-commons/1.14.3/micrometer-commons-1.14.3.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-core/6.2.2/spring-core-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-jcl/6.2.2/spring-jcl-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-expression/6.2.2/spring-expression-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-web/6.2.2/spring-web-6.2.2.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-jdbc/6.1.13/spring-jdbc-6.1.13.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-tx/6.1.13/spring-tx-6.1.13.jar:/Users/antonindudragne/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/antonindudragne/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/antonindudragne/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.2/jackson-databind-2.18.2.jar:/Users/antonindudragne/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.2/jackson-annotations-2.18.2.jar:/Users/antonindudragne/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.2/jackson-core-2.18.2.jar:/Users/antonindudragne/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar:/Users/antonindudragne/.m2/repository/ch/qos/logback/logback-classic/1.5.16/logback-classic-1.5.16.jar:/Users/antonindudragne/.m2/repository/ch/qos/logback/logback-core/1.5.16/logback-core-1.5.16.jar:/Users/antonindudragne/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/antonindudragne/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/Users/antonindudragne/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/Users/antonindudragne/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/antonindudragne/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/Users/antonindudragne/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/antonindudragne/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/Users/antonindudragne/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/Users/antonindudragne/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/Users/antonindudragne/.m2/repository/org/mockito/mockito-core/5.10.0/mockito-core-5.10.0.jar:/Users/antonindudragne/.m2/repository/net/bytebuddy/byte-buddy/1.14.11/byte-buddy-1.14.11.jar:/Users/antonindudragne/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.11/byte-buddy-agent-1.14.11.jar:/Users/antonindudragne/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/antonindudragne/.m2/repository/org/springframework/spring-test/6.2.2/spring-test-6.2.2.jar:/Users/antonindudragne/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/Users/antonindudragne/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/antonindudragne/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/antonindudragne/.m2/repository/com/jayway/jsonpath/json-path/2.7.0/json-path-2.7.0.jar:/Users/antonindudragne/.m2/repository/net/minidev/json-smart/2.4.7/json-smart-2.4.7.jar:/Users/antonindudragne/.m2/repository/net/minidev/accessors-smart/2.4.7/accessors-smart-2.4.7.jar:/Users/antonindudragne/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/antonindudragne"/>
    <property name="user.language" value="fr"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/antonindudragne/Documents/4A EPF/Java/Projet"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/antonindudragne/Documents/4A EPF/Java/Projet/target/surefire/surefirebooter-20250310142341669_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="23.0.2"/>
    <property name="user.name" value="antonindudragne"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.3.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/antonindudragne/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/w_/myk1td2x5yl9xhd021yswqqw0000gn/T/"/>
    <property name="java.version" value="23.0.2"/>
    <property name="user.dir" value="/Users/antonindudragne/Documents/4A EPF/Java/Projet"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/antonindudragne/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="23.0.2"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="67.0"/>
  </properties>
  <testcase name="testFindAll" classname="com.epf.dao.impl.ZombieDaoImplTest" time="0.232">
    <error message="Failed to execute SQL script statement #6 of class path resource [init.sql]: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )" type="org.springframework.jdbc.datasource.init.ScriptStatementFailedException"><![CDATA[org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #6 of class path resource [init.sql]: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(EmbeddedDatabaseFactory.java:200)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.getDatabase(EmbeddedDatabaseFactory.java:158)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder.build(EmbeddedDatabaseBuilder.java:283)
	at com.epf.dao.impl.ZombieDaoImplTest.setUp(ZombieDaoImplTest.java:27)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT [*]UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )"; attendu "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT [*]UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )"; expected "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL ) [42001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.ParserBase.getSyntaxError(ParserBase.java:750)
	at org.h2.command.ParserBase.read(ParserBase.java:357)
	at org.h2.command.ParserBase.readIfMore(ParserBase.java:625)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8940)
	at org.h2.command.Parser.parseCreate(Parser.java:6404)
	at org.h2.command.Parser.parsePrepared(Parser.java:666)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:569)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 9 more
]]></error>
    <system-out><![CDATA[14:23:42.155 [main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory -- Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
14:23:42.160 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
14:23:42.160 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource -- Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
14:23:42.290 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
14:23:42.296 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE SCHEMA IF NOT EXISTS pvz
14:23:42.296 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: USE pvz
14:23:42.296 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Zombie
14:23:42.296 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Plante
14:23:42.296 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Map
14:23:42.301 [main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory -- Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
14:23:42.301 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource -- Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
]]></system-out>
  </testcase>
  <testcase name="testSave" classname="com.epf.dao.impl.ZombieDaoImplTest" time="0.006">
    <error message="Failed to execute SQL script statement #6 of class path resource [init.sql]: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )" type="org.springframework.jdbc.datasource.init.ScriptStatementFailedException"><![CDATA[org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #6 of class path resource [init.sql]: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(EmbeddedDatabaseFactory.java:200)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.getDatabase(EmbeddedDatabaseFactory.java:158)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder.build(EmbeddedDatabaseBuilder.java:283)
	at com.epf.dao.impl.ZombieDaoImplTest.setUp(ZombieDaoImplTest.java:27)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT [*]UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )"; attendu "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT [*]UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )"; expected "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL ) [42001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.ParserBase.getSyntaxError(ParserBase.java:750)
	at org.h2.command.ParserBase.read(ParserBase.java:357)
	at org.h2.command.ParserBase.readIfMore(ParserBase.java:625)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8940)
	at org.h2.command.Parser.parseCreate(Parser.java:6404)
	at org.h2.command.Parser.parsePrepared(Parser.java:666)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:569)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 9 more
]]></error>
    <system-out><![CDATA[14:23:42.312 [main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory -- Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
14:23:42.312 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
14:23:42.312 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource -- Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
14:23:42.314 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
14:23:42.315 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE SCHEMA IF NOT EXISTS pvz
14:23:42.315 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: USE pvz
14:23:42.316 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Zombie
14:23:42.316 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Plante
14:23:42.316 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Map
14:23:42.316 [main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory -- Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
14:23:42.317 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource -- Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
]]></system-out>
  </testcase>
  <testcase name="testFindById" classname="com.epf.dao.impl.ZombieDaoImplTest" time="0.006">
    <error message="Failed to execute SQL script statement #6 of class path resource [init.sql]: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )" type="org.springframework.jdbc.datasource.init.ScriptStatementFailedException"><![CDATA[org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #6 of class path resource [init.sql]: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(EmbeddedDatabaseFactory.java:200)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.getDatabase(EmbeddedDatabaseFactory.java:158)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder.build(EmbeddedDatabaseBuilder.java:283)
	at com.epf.dao.impl.ZombieDaoImplTest.setUp(ZombieDaoImplTest.java:27)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT [*]UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )"; attendu "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT [*]UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )"; expected "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL ) [42001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.ParserBase.getSyntaxError(ParserBase.java:750)
	at org.h2.command.ParserBase.read(ParserBase.java:357)
	at org.h2.command.ParserBase.readIfMore(ParserBase.java:625)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8940)
	at org.h2.command.Parser.parseCreate(Parser.java:6404)
	at org.h2.command.Parser.parsePrepared(Parser.java:666)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:569)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 9 more
]]></error>
    <system-out><![CDATA[14:23:42.320 [main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory -- Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
14:23:42.320 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
14:23:42.320 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource -- Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
14:23:42.322 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
14:23:42.322 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE SCHEMA IF NOT EXISTS pvz
14:23:42.322 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: USE pvz
14:23:42.323 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Zombie
14:23:42.323 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Plante
14:23:42.323 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Map
14:23:42.323 [main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory -- Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
14:23:42.323 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource -- Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
]]></system-out>
  </testcase>
  <testcase name="testFindByMapId" classname="com.epf.dao.impl.ZombieDaoImplTest" time="0.006">
    <error message="Failed to execute SQL script statement #6 of class path resource [init.sql]: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )" type="org.springframework.jdbc.datasource.init.ScriptStatementFailedException"><![CDATA[org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #6 of class path resource [init.sql]: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(EmbeddedDatabaseFactory.java:200)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.getDatabase(EmbeddedDatabaseFactory.java:158)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder.build(EmbeddedDatabaseBuilder.java:283)
	at com.epf.dao.impl.ZombieDaoImplTest.setUp(ZombieDaoImplTest.java:27)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT [*]UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )"; attendu "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT [*]UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )"; expected "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL ) [42001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.ParserBase.getSyntaxError(ParserBase.java:750)
	at org.h2.command.ParserBase.read(ParserBase.java:357)
	at org.h2.command.ParserBase.readIfMore(ParserBase.java:625)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8940)
	at org.h2.command.Parser.parseCreate(Parser.java:6404)
	at org.h2.command.Parser.parsePrepared(Parser.java:666)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:569)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 9 more
]]></error>
    <system-out><![CDATA[14:23:42.326 [main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory -- Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
14:23:42.326 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
14:23:42.326 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource -- Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
14:23:42.328 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
14:23:42.329 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE SCHEMA IF NOT EXISTS pvz
14:23:42.329 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: USE pvz
14:23:42.330 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Zombie
14:23:42.330 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Plante
14:23:42.330 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Map
14:23:42.330 [main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory -- Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
14:23:42.330 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource -- Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
]]></system-out>
  </testcase>
  <testcase name="testDeleteById" classname="com.epf.dao.impl.ZombieDaoImplTest" time="0.008">
    <error message="Failed to execute SQL script statement #6 of class path resource [init.sql]: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )" type="org.springframework.jdbc.datasource.init.ScriptStatementFailedException"><![CDATA[org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #6 of class path resource [init.sql]: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(EmbeddedDatabaseFactory.java:200)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.getDatabase(EmbeddedDatabaseFactory.java:158)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder.build(EmbeddedDatabaseBuilder.java:283)
	at com.epf.dao.impl.ZombieDaoImplTest.setUp(ZombieDaoImplTest.java:27)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT [*]UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )"; attendu "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT [*]UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )"; expected "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL ) [42001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.ParserBase.getSyntaxError(ParserBase.java:750)
	at org.h2.command.ParserBase.read(ParserBase.java:357)
	at org.h2.command.ParserBase.readIfMore(ParserBase.java:625)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8940)
	at org.h2.command.Parser.parseCreate(Parser.java:6404)
	at org.h2.command.Parser.parsePrepared(Parser.java:666)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:569)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 9 more
]]></error>
    <system-out><![CDATA[14:23:42.333 [main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory -- Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
14:23:42.333 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
14:23:42.333 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource -- Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
14:23:42.334 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
14:23:42.335 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE SCHEMA IF NOT EXISTS pvz
14:23:42.335 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: USE pvz
14:23:42.336 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Zombie
14:23:42.336 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Plante
14:23:42.336 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Map
14:23:42.339 [main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory -- Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
14:23:42.339 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource -- Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
]]></system-out>
  </testcase>
  <testcase name="testUpdate" classname="com.epf.dao.impl.ZombieDaoImplTest" time="0.005">
    <error message="Failed to execute SQL script statement #6 of class path resource [init.sql]: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )" type="org.springframework.jdbc.datasource.init.ScriptStatementFailedException"><![CDATA[org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #6 of class path resource [init.sql]: CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(EmbeddedDatabaseFactory.java:200)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.getDatabase(EmbeddedDatabaseFactory.java:158)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder.build(EmbeddedDatabaseBuilder.java:283)
	at com.epf.dao.impl.ZombieDaoImplTest.setUp(ZombieDaoImplTest.java:27)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT [*]UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )"; attendu "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT [*]UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL )"; expected "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE Map ( id_map INT AUTO_INCREMENT PRIMARY KEY, ligne INT UNSIGNED NOT NULL, colonne INT UNSIGNED NOT NULL, chemin_image VARCHAR(255) DEFAULT NULL ) [42001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.ParserBase.getSyntaxError(ParserBase.java:750)
	at org.h2.command.ParserBase.read(ParserBase.java:357)
	at org.h2.command.ParserBase.readIfMore(ParserBase.java:625)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8940)
	at org.h2.command.Parser.parseCreate(Parser.java:6404)
	at org.h2.command.Parser.parsePrepared(Parser.java:666)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:569)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 9 more
]]></error>
    <system-out><![CDATA[14:23:42.341 [main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory -- Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
14:23:42.341 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils -- Fetching JDBC Connection from DataSource
14:23:42.341 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource -- Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
14:23:42.343 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- Executing SQL script from class path resource [init.sql]
14:23:42.344 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: CREATE SCHEMA IF NOT EXISTS pvz
14:23:42.344 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: USE pvz
14:23:42.344 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Zombie
14:23:42.344 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Plante
14:23:42.344 [main] DEBUG org.springframework.jdbc.datasource.init.ScriptUtils -- 0 returned as update count for SQL: DROP TABLE IF EXISTS Map
14:23:42.345 [main] INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory -- Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
14:23:42.345 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource -- Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
]]></system-out>
  </testcase>
</testsuite>